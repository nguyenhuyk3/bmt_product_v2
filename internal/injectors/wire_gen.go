// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injectors

import (
	"bmt_product_service/db/sqlc"
	"bmt_product_service/internal/controllers"
	"bmt_product_service/internal/implementations/message_broker/readers"
	"bmt_product_service/internal/implementations/message_broker/writers"
	"bmt_product_service/internal/implementations/product"
	"bmt_product_service/internal/implementations/redis"
	"bmt_product_service/internal/implementations/upload"
	"bmt_product_service/internal/injectors/provider"
)

// Injectors from product.controller.wire.go:

func InitProductController() (*controllers.ProductController, error) {
	iUpload := upload.NewUploadService()
	pool := provider.ProvidePgxPool()
	iStore := sqlc.NewStore(pool)
	iRedis := redis.NewRedisClient()
	iFilm := product.NewFilmService(iUpload, iStore, iRedis)
	iFoodAndBeverage := product.NewFABService(iUpload, iStore)
	productController := controllers.NewProductController(iFilm, iFoodAndBeverage)
	return productController, nil
}

// Injectors from product_upload_reader.wire.go:

func InitProductUploadReader() (*readers.ProductUploadReader, error) {
	iUpload := upload.NewUploadService()
	iMessageBrokerWriter := writers.NewKafkaWriter()
	queries := provider.ProvideQueries()
	productUploadReader := readers.NewProductUploadReader(iUpload, iMessageBrokerWriter, queries)
	return productUploadReader, nil
}
